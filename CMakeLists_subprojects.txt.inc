GET_FILENAME_COMPONENT(SUBDIRNAME ${CMAKE_CURRENT_SOURCE_DIR} NAME)

IF( DEFINED SPECIFIC_PROJECTNAME )
	# this is for ambix_decoder (which shares the code of ambix_binaural)
	SET (SUBPROJECT_NAME ${SPECIFIC_PROJECTNAME}${NUM_CHANNELS})
ELSE( DEFINED SPECIFIC_PROJECTNAME )
	# this is the normal way...
	SET (SUBPROJECT_NAME ${SUBDIRNAME}${NUM_CHANNELS})
ENDIF(DEFINED SPECIFIC_PROJECTNAME )

IF(APPLE)
	# switch to c++11
	ADD_DEFINITIONS(
		-std=c++11
	)
ENDIF (APPLE)

# add the folder with Juce includes
INCLUDE_DIRECTORIES ( JuceLibraryCode )

IF(DEFINED SPECIFIC_SOURE_DIR)
	INCLUDE_DIRECTORIES ( ${SPECIFIC_SOURE_DIR}/JuceLibraryCode )
ENDIF(DEFINED SPECIFIC_SOURE_DIR)

# add all c, cpp, cc files from the Source directory
FILE ( GLOB_RECURSE SOURCE Source/*.c* )

IF(DEFINED SPECIFIC_SOURE_DIR)
	FILE ( GLOB_RECURSE SOURCE ${SPECIFIC_SOURE_DIR}/Source/*.c* )
	# LIST ( APPEND SOURCE ${SOURCE_2})
ENDIF(DEFINED SPECIFIC_SOURE_DIR)

LIST ( SORT SOURCE )


IF(NOT APPLE)
	#osx need special treating for creating the bundle...
	ADD_LIBRARY(${SUBPROJECT_NAME} MODULE ${JUCE_PLUGIN_CLIENT_SOURCE} ${SOURCE} ) #${VSTSDK_PLUGIN_SOURCE}

	TARGET_LINK_LIBRARIES( ${SUBPROJECT_NAME}
		${JUCE_LIBRARIES}
		${JUCE_STATIC_LIB}
	)
	
	# get the target folder for later copying it
	GET_TARGET_PROPERTY(FILEPATH ${SUBPROJECT_NAME} LOCATION)
ENDIF(NOT APPLE)



IF(APPLE)

	ADD_LIBRARY(${SUBPROJECT_NAME} MODULE ${JUCE_PLUGIN_CLIENT_SOURCE} ${SOURCE})


	# MESSAGE( STATUS "CMAKE_MODULE_PATH: " ${CMAKE_MODULE_PATH} )

	#prototype Info.plist
	SET_TARGET_PROPERTIES(${SUBPROJECT_NAME} PROPERTIES MACOSX_BUNDLE_INFO_PLIST ${SRC_DIR}/osx_ressources/MacOSXBundleInfo.plist.in)

	SET_TARGET_PROPERTIES(${SUBPROJECT_NAME} PROPERTIES BUNDLE TRUE)
	SET_TARGET_PROPERTIES(${SUBPROJECT_NAME} PROPERTIES BUNDLE_EXTENSION vst)
	SET_TARGET_PROPERTIES(${SUBPROJECT_NAME} PROPERTIES MACOSX_BUNDLE_BUNDLE_VERSION ${VERSION})
	SET_TARGET_PROPERTIES(${SUBPROJECT_NAME} PROPERTIES MACOSX_BUNDLE_SHORT_VERSION_STRING ${VERSION})
	SET_TARGET_PROPERTIES(${SUBPROJECT_NAME} PROPERTIES MACOSX_BUNDLE_LONG_VERSION_STRING ${VERSION})
	SET_TARGET_PROPERTIES(${SUBPROJECT_NAME} PROPERTIES MACOSX_BUNDLE_BUNDLE_NAME ${SUBPROJECT_NAME})


	SET_TARGET_PROPERTIES(${SUBPROJECT_NAME} PROPERTIES LIBRARY_OUTPUT_DIRECTORY ${BIN_DIR})

	# link libs
	TARGET_LINK_LIBRARIES( ${SUBPROJECT_NAME}
		${JUCE_LIBRARIES}
		${JUCE_STATIC_LIB}
	)

	#move whole .vst folder to _bin
	ADD_CUSTOM_COMMAND(
		TARGET ${SUBPROJECT_NAME} POST_BUILD 
		COMMAND ${CMAKE_COMMAND} 
		ARGS -E copy_directory ${BIN_DIR}/${SUBPROJECT_NAME}.vst ${BIN_DIR}/_bin/${SUBPROJECT_NAME}.vst
	)

	#copy PkgInfo
	ADD_CUSTOM_COMMAND(
		TARGET ${SUBPROJECT_NAME} POST_BUILD 
		COMMAND ${CMAKE_COMMAND} 
		ARGS -E copy ${SRC_DIR}/osx_ressources/PkgInfo ${BIN_DIR}/_bin/${SUBPROJECT_NAME}.vst/Contents/PkgInfo
	)
	
	IF( DEFINED OSX_COPY_LIB )
		#copy additional files (eg. dynamic libraries)
		ADD_CUSTOM_COMMAND(
			TARGET ${SUBPROJECT_NAME} POST_BUILD 
			COMMAND ${CMAKE_COMMAND} 
			ARGS -E copy ${SRC_DIR}/mac-libs/${OSX_COPY_LIB} ${BIN_DIR}/_bin/${SUBPROJECT_NAME}.vst/Contents/Frameworks/${OSX_COPY_LIB}
			)
	ENDIF( DEFINED OSX_COPY_LIB )
	
	#remove build in home dir
	ADD_CUSTOM_COMMAND(
		TARGET ${SUBPROJECT_NAME} POST_BUILD 
		COMMAND ${CMAKE_COMMAND} 
		ARGS -E remove_directory ${BIN_DIR}/${SUBPROJECT_NAME}.vst
	)

ENDIF(APPLE)

IF(UNIX AND NOT APPLE AND NOT ANDROID)
	ADD_CUSTOM_COMMAND(
		TARGET ${SUBPROJECT_NAME} POST_BUILD 
		COMMAND ${CMAKE_COMMAND} 
		ARGS -E copy ${FILEPATH} ${BIN_DIR}/_bin/${SUBPROJECT_NAME}.so
	)
ENDIF(UNIX AND NOT APPLE AND NOT ANDROID)

IF(WIN32)
	ADD_CUSTOM_COMMAND(
		TARGET ${SUBPROJECT_NAME} POST_BUILD 
		COMMAND ${CMAKE_COMMAND} 
		ARGS -E copy ${FILEPATH} ${BIN_DIR}/_bin/${SUBPROJECT_NAME}.dll
	)
ENDIF(WIN32)

IF(WITH_FFTW3)

	# MESSAGE( STATUS "LINKING FFTW3F: " ${FFTW3F_LIBRARY} )
	
	TARGET_LINK_LIBRARIES( ${SUBPROJECT_NAME}
	
		${FFTW3F_LIBRARY}
	)
ENDIF(WITH_FFTW3)

IF(WITH_LIBSOXR)
	TARGET_LINK_LIBRARIES( ${SUBPROJECT_NAME}
		${LIBSOXR_LIBRARIES}
	)
ENDIF(WITH_LIBSOXR)

IF(WIN32)
  IF (WITH_LIBLO OR WITH_FFTW3)
    TARGET_LINK_LIBRARIES( ${SUBPROJECT_NAME}
		  ${CMAKE_THREAD_LIBS_INIT}
      )
  ENDIF (WITH_LIBLO OR WITH_FFTW3)
ENDIF(WIN32)

#########
# dependency on JUCE_STATIC_LIB
ADD_DEPENDENCIES (${SUBPROJECT_NAME} ${JUCE_STATIC_LIB})